{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../services/mutation';\nimport '../styles/index.css';\nimport '../styles/login.css';\nimport Auth from '../utils/auth';\nconst Login = props => {\n  _s();\n  const [formState, setFormState] = useState({\n    email: '',\n    password: ''\n  });\n  const [login, {\n    error,\n    data\n  }] = useMutation(LOGIN_USER);\n\n  // update state based on form input changes\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async event => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const {\n        data\n      } = await login({\n        variables: {\n          ...formState\n        }\n      });\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: ''\n    });\n  };\n};\n\n// function Login() {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const history = useNavigate();\n\n//   const [loginUser, { loading }] = useMutation(LOGIN_USER, {\n//     onCompleted: (data) => {\n//       localStorage.setItem('token', data.loginUser.token);\n//       history.push('/');\n//     },\n//     onError: (error) => {\n//       setError(error.message);\n//     },\n//   });\n\n//   const handleLogin = (event) => {\n//     event.preventDefault();\n//     loginUser({ variables: { email, password } });\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2>Login</h2>\n//       {error && <p className=\"error\">{error}</p>}\n//       <form onSubmit={handleLogin}>\n//         <div className=\"input-field\">\n//           <label htmlFor=\"email\">Email</label>\n//           <input\n//             type=\"email\"\n//             name=\"email\"\n//             value={email}\n//             onChange={(event) => setEmail(event.target.value)}\n//             required\n//           />\n//         </div>\n//         <div className=\"input-field\">\n//           <label htmlFor=\"password\">Password</label>\n//           <input\n//             type=\"password\"\n//             name=\"password\"\n//             value={password}\n//             onChange={(event) => setPassword(event.target.value)}\n//             required\n//           />\n//         </div>\n//         <button type=\"submit\" className=\"btn\">\n//           {loading ? 'Loading...' : 'Login'}\n//         </button>\n//       </form>\n//       <p>\n//         Don't have an account? <Link to=\"/signup\">Signup</Link>\n//       </p>\n//     </div>\n//   );\n// }\n\n// export default Login;\n_s(Login, \"Zi7rrAbo8uspQgtfchspvzEWGlU=\", false, function () {\n  return [useMutation];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","useNavigate","useMutation","LOGIN_USER","Auth","Login","props","_s","formState","setFormState","email","password","login","error","data","handleChange","event","name","value","target","handleFormSubmit","preventDefault","console","log","variables","token","e","_c","$RefreshReg$"],"sources":["/Users/danielaguilera/Projects/bereal-songs-official/client/src/pages/login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../services/mutation';\nimport '../styles/index.css';\nimport '../styles/login.css';\n\n\nimport Auth from '../utils/auth';\nconst Login = (props) => {\n    const[formState, setFormState] = useState({email:'', password:''});\n    const[login, { error, data }] = useMutation(LOGIN_USER);\n\n    // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  // submit form\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(formState);\n    try {\n      const { data } = await login({\n        variables: { ...formState },\n      });\n\n      Auth.login(data.login.token);\n    } catch (e) {\n      console.error(e);\n    }\n\n    // clear form values\n    setFormState({\n      email: '',\n      password: '',\n    });\n  };\n\n}\n\n// function Login() {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const history = useNavigate();\n\n//   const [loginUser, { loading }] = useMutation(LOGIN_USER, {\n//     onCompleted: (data) => {\n//       localStorage.setItem('token', data.loginUser.token);\n//       history.push('/');\n//     },\n//     onError: (error) => {\n//       setError(error.message);\n//     },\n//   });\n\n//   const handleLogin = (event) => {\n//     event.preventDefault();\n//     loginUser({ variables: { email, password } });\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h2>Login</h2>\n//       {error && <p className=\"error\">{error}</p>}\n//       <form onSubmit={handleLogin}>\n//         <div className=\"input-field\">\n//           <label htmlFor=\"email\">Email</label>\n//           <input\n//             type=\"email\"\n//             name=\"email\"\n//             value={email}\n//             onChange={(event) => setEmail(event.target.value)}\n//             required\n//           />\n//         </div>\n//         <div className=\"input-field\">\n//           <label htmlFor=\"password\">Password</label>\n//           <input\n//             type=\"password\"\n//             name=\"password\"\n//             value={password}\n//             onChange={(event) => setPassword(event.target.value)}\n//             required\n//           />\n//         </div>\n//         <button type=\"submit\" className=\"btn\">\n//           {loading ? 'Loading...' : 'Login'}\n//         </button>\n//       </form>\n//       <p>\n//         Don't have an account? <Link to=\"/signup\">Signup</Link>\n//       </p>\n//     </div>\n//   );\n// }\n\n// export default Login;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,UAAU,QAAQ,sBAAsB;AACjD,OAAO,qBAAqB;AAC5B,OAAO,qBAAqB;AAG5B,OAAOC,IAAI,MAAM,eAAe;AAChC,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrB,MAAK,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC;IAACW,KAAK,EAAC,EAAE;IAAEC,QAAQ,EAAC;EAAE,CAAC,CAAC;EAClE,MAAK,CAACC,KAAK,EAAE;IAAEC,KAAK;IAAEC;EAAK,CAAC,CAAC,GAAGZ,WAAW,CAACC,UAAU,CAAC;;EAEvD;EACF,MAAMY,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IAEpCV,YAAY,CAAC;MACX,GAAGD,SAAS;MACZ,CAACS,IAAI,GAAGC;IACV,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAME,gBAAgB,GAAG,MAAOJ,KAAK,IAAK;IACxCA,KAAK,CAACK,cAAc,EAAE;IACtBC,OAAO,CAACC,GAAG,CAACf,SAAS,CAAC;IACtB,IAAI;MACF,MAAM;QAAEM;MAAK,CAAC,GAAG,MAAMF,KAAK,CAAC;QAC3BY,SAAS,EAAE;UAAE,GAAGhB;QAAU;MAC5B,CAAC,CAAC;MAEFJ,IAAI,CAACQ,KAAK,CAACE,IAAI,CAACF,KAAK,CAACa,KAAK,CAAC;IAC9B,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVJ,OAAO,CAACT,KAAK,CAACa,CAAC,CAAC;IAClB;;IAEA;IACAjB,YAAY,CAAC;MACXC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC;AAEH,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAAJ,EAAA,CA9FMF,KAAK;EAAA,QAEyBH,WAAW;AAAA;AAAAyB,EAAA,GAFzCtB,KAAK;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}