{"ast":null,"code":"var _jsxFileName = \"/Users/danielaguilera/Projects/bereal-songs-official/client/src/App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { ApolloProvider, ApolloClient, InMemoryCache, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n// import client from './config/apolloClient';\n\nimport './styles/index.css';\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport { App } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst httpLink = createHttpLink({\n  uri: '/graphql'\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, _ref) => {\n  let {\n    headers\n  } = _ref;\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : ''\n    }\n  };\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\nconst loggedIn = false;\nconst isLoading = false;\nconst user = {};\nconst handleLogin = () => {};\nconst songsList = [];\nconst postsList = [];\nconst err = {};\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        children: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 49,\n  columnNumber: 3\n}, this), document.getElementById('root'));\nexport default App;","map":{"version":3,"names":["React","ReactDOM","BrowserRouter","Router","Routes","Route","ApolloProvider","ApolloClient","InMemoryCache","createHttpLink","setContext","Home","Signup","Login","App","jsxDEV","_jsxDEV","httpLink","uri","authLink","_","_ref","headers","token","localStorage","getItem","authorization","client","link","concat","cache","loggedIn","isLoading","user","handleLogin","songsList","postsList","err","render","StrictMode","children","path","fileName","_jsxFileName","lineNumber","columnNumber","document","getElementById"],"sources":["/Users/danielaguilera/Projects/bereal-songs-official/client/src/App.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { ApolloProvider, ApolloClient, InMemoryCache, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n// import client from './config/apolloClient';\n\n\n\nimport './styles/index.css';\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport { App } from 'antd';\n\n\nconst httpLink = createHttpLink({\n    uri: '/graphql',\n})\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n    const token = localStorage.getItem('id_token');\n    return {\n      headers: {\n        ...headers,\n        authorization: token ? `Bearer ${token}` : '',\n      },\n    };\n  });\n  \n  const client = new ApolloClient({\n  \n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n  \n  });\n  \n  const loggedIn = false\n  const isLoading = false\n  const user = {}\n  const handleLogin = () => {}\n  const songsList = []\n  const postsList = []\n  const err = {}\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <Router>\n        <Route path=\"/signup\">\n            <Signup />\n        </Route>\n        <Route path=\"/login\">\n            <Login />\n        </Route>\n        <Route path=\"/\">\n            <Home />\n        </Route>\n      </Router>\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}